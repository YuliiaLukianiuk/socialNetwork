{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElement","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","newPostNext","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUsersProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bf8b9a31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__uP_iR\",\"posts\":\"MyPosts_posts__4rWum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__xoo4L\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\n\r\nexport const  ProfileStatusWithHooks = (props) => {\r\n\r\nlet[editMode, setEditMode] = useState(false );\r\nlet[status, setStatus] = useState(props.status );\r\n\r\nuseEffect( () => {\r\n\tsetStatus(props.status);\r\n}, [props.status])\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\nconst\tdeactivateEditMode= () => {\r\n\tsetEditMode(false)\r\n\r\n\t\t props.updateStatus(status);\r\n\t}\r\nconst\tonStatusChange = (e) => {\r\n\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{!editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={ activateEditMode}>{props.status || \"------\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://i.pinimg.com/originals/4b/ba/6f/4bba6f4d487a8029817f63ff9101911d.jpg\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validate\";\r\nimport {Textarea} from \"../../common/FormsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElement =\r\n    props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>\r\n    );\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3> My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={classes.posts}></div>\r\n      {postsElement}\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n       posts: state.profilePage.posts,\r\n       newPostText: state.profilePage.newPostText\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostNext) => {\r\n            dispatch(addPostActionCreator(newPostNext));\r\n        },\r\n\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from \"react-router-dom\";\r\n\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}  status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n//  AuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}