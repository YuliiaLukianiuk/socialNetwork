{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/AuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","messages","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","messagePage","dialogsElements","dialogData","map","messagesElements","messagesData","m","isAuth","dialogs","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageActionCreator","withRouter","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCapMC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCDjBC,EAJC,SAACT,GACf,OAAO,qBAAKG,UAAWC,IAAQM,SAAxB,SAAmCV,EAAMW,W,yCCkC5CC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACf,GACvB,OACC,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACC,8BACC,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXb,KAAK,iBACLc,YAAY,qBACnBC,SAAY,CAACC,IAAUZ,OAExB,8BACC,kDAOWa,EA/CC,SAACzB,GAEhB,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,WAAWC,KAAI,SAACzB,GAAD,OAC1C,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAsBN,GAAIG,EAAOH,IAAtBG,EAAOH,OAExC6B,EAAmBL,EAAMM,aAAaF,KAAI,SAACG,GAAD,OAC7C,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE/B,OAOrC,OAAKF,EAAMkC,OAIV,sBAAK/B,UAAWC,IAAQ+B,QAAxB,UACC,qBAAKhC,UAAWC,IAAQgC,aAAxB,SAAuCR,IACvC,qBAAKzB,UAAWC,IAAQM,SAAxB,SACC,8BAAMqB,MAGP,cAACjB,EAAD,CAAqBG,SAdH,SAACoB,GACnBrC,EAAMsC,YAAYD,EAAOE,sBAInB,cAAC,IAAD,CAAUhC,GAAI,Y,+CCrBlBiC,EAA6B,SAACd,GAAD,MAAY,CAC5CQ,OAAQR,EAAMe,KAAKP,S,OCoBNQ,sBACbC,aAjBoB,SAACjB,GACvB,MAAO,CACHC,YAAaD,EAAMC,gBAIE,SAACiB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAyBN,SAS5CO,KDpB0B,SAACC,GAAe,IACrCC,EADoC,4JAEzC,WACC,OAAKC,KAAKjD,MAAMkC,OAGT,cAACa,EAAD,eAAgBE,KAAKjD,QAFpB,cAAC,IAAD,CAAUO,GAAI,eAJkB,GACV2C,IAAMH,WAUtC,OADqCJ,YAAQH,EAARG,CAAoCK,KCQ3DN,CAIbjB","file":"static/js/4.fc0dc0c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__11l14\",\"dialogsItems\":\"Dialogs_dialogsItems__1z1UC\",\"dialog\":\"Dialogs_dialog__1YU_N\",\"active\":\"Dialogs_active__1bM2b\",\"messages\":\"Dialogs_messages__2JJLY\",\"message\":\"Dialogs_message__oNXNO\"};","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={classes.messages}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validate\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.messagePage;\r\n\r\n\tlet dialogsElements = state.dialogData.map((dialog) => (\r\n\t\t<DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>\r\n\t));\r\n\tlet messagesElements = state.messagesData.map((m) => (\r\n\t\t<Message message={m.message} key={m.id}/>\r\n\t));\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\t props.sendMessage(values.newMessageBody)\r\n\r\n\t}\r\n\tif (!props.isAuth) {\r\n\t\treturn <Redirect to={\"/Login\"}/>\r\n\t}\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>{dialogsElements}</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst maxLength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t       name=\"newMessageBody\"\r\n\t\t\t\t       placeholder=\"Enter your massage\"\r\n\t\t\t\tvalidate = {[required, maxLength50]}></Field>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\nexport default Dialogs;\r\n"," import React from \"react\";\r\n import {Redirect} from \"react-router-dom\";\r\n import {connect} from \"react-redux\";\r\n\r\n let mapStateToPropsForRedirect = (state) => ({\r\n\t isAuth: state.auth.isAuth\r\n })\r\nexport const AuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) {\r\n\t\t\t\treturn <Redirect to={\"/Login\"}/>\r\n\t\t\t}\r\n\t\t\treturn <Component  {...this.props}/>\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\treturn ConnectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n    messagePage: state.messagePage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter,\r\n  AuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}